<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.com.dao.IAccountDao">

    <!-- 定义封装account和user的resultMap -->
    <resultMap id="accountUserMap" type="account">
        <id property="id" column="aid"></id>
        <result property="uid" column="uid"></result>
        <result property="money" column="money"></result>

        <!-- 一对一的关系映射，配置封装user的内容 -->
<!--        以下注释部分为直接加载    -->
<!--        <association property="user" column="uid" javaType="user">-->
<!--            <id property="id" column="id"></id>-->
<!--            <result property="username" column="username"></result>-->
<!--            <result property="address" column="address"></result>-->
<!--            <result property="sex" column="sex"></result>-->
<!--            <result property="birthday" column="birthday"></result>-->
<!--        </association>-->

<!--        以下部分为延迟加载    -->
        <!-- select属性指定的内容：查询用户的唯一标识
        column属性指定的内容：用户根据id查询时，所需要的参数的值
        -->
        <!-- 还需要在SqlMapConfig中设置全局参数-->
        <association property="user" column="uid" javaType="user" select="com.com.dao.IUserDao.findById"></association>

    </resultMap>

<!--    &lt;!&ndash; 查询所有-直接加载 &ndash;&gt;-->
<!--    <select id="findAll" resultMap="accountUserMap">-->
<!--        select a.* ,u.username, u.address from user u , account a where a.UID=u.id-->
<!--    </select>-->

    <!-- 查询所有-延迟加载加载 -->
    <select id="findAll" resultMap="accountUserMap">
        <!-- 不能一下查两张表（对比上面的findAll -->
        select * from account
    </select>

    <!-- 查询所有账户，并且包含用户名称和地址 -->
    <select id="findAllAccount" resultType="AccountUser">
        select a.* ,u.username, u.address from user u , account a where a.UID=u.id
    </select>
</mapper>