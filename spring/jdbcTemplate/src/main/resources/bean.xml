<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置jdbcTemplate -->
    <!-- JdbcTemplate用于和数据库交互，进行CRUD操作 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置数据源(此处是spring内置的) -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/spring" />
        <property name="username" value="root" />
        <property name="password" value="gc14,xyk" />
    </bean>

    <bean id="accountDao" class="dao.impl.AccountDaoImpl" >
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    <bean id="accountService" class="service.impl.AccountServiceImpl" >
        <property name="accountDao" ref="accountDao" />
    </bean>

    <!-- spring中基于xml的声明式事务控制 -->
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 配置事务的通知（先导入事务的约束） -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager" >
        <!-- 配置事务属性
                isolation           隔离级别，默认为使用数据库的隔离级别
                propagation         指定事务传播行为，增删改选择默认REQUIRED，查询选择SUPPORTS
                read-only           指定事务是否只读 只有查询方法才能设置为true
                timeout             超时时间，默认为-1 永不超时
                rollback-for        用于指定一个异常，只有当产生该异常时，事务回滚
                no-rollback-for     与上面相反，只有当产生该异常时，事务不回滚
        -->
        <tx:attributes>
            <tx:method name="transfer" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!-- 配置通用切入点表达式 -->
        <aop:pointcut id="pt1" expression="execution(* service.impl.*.*(..))"/>
        <!-- 建立切入点表达式和事务通知的关系 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1" />
    </aop:config>
    

</beans>